name: CD - Staging

permissions:
  contents: read
  packages: read

on:
  # Se déclenche quand le workflow CI se termine sur la branche develop
  workflow_run:
    workflows: ["CI"]
    branches: ["develop"]
    types: ["completed"]

concurrency:
  group: deploy-staging
  cancel-in-progress: true

jobs:
  deploy-staging:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted
    timeout-minutes: 30
    environment:
      name: staging
      url: http://localhost:8080
    env:
      TAG: ${{ github.event.workflow_run.head_sha }}

    steps:
      - name: Checkout repo at requested ref
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull & deploy staging
        shell: bash
        run: |
          set -euo pipefail
          # OPTION B : rendre TAG dispo à docker compose sans l’écrire dans .env.staging
          export TAG="${TAG}"

          docker compose -p lp-staging --env-file .env.staging down --remove-orphans || true
          docker compose -p lp-staging --env-file .env.staging pull
          docker compose -p lp-staging --env-file .env.staging up -d --wait --wait-timeout 300
          docker compose -p lp-staging --env-file .env.staging ps

      - name: Health probe with retries
        shell: bash
        run: |
          set -euo pipefail
          for i in {1..10}; do
            if curl -fsS http://localhost:8080/actuator/health > /dev/null; then
              echo "Healthy."
              exit 0
            fi
            echo "Waiting for health... ($i/10)"; sleep 5
          done
          echo "Backend not healthy"
          docker compose -p lp-staging --env-file .env.staging logs backend || true
          exit 1