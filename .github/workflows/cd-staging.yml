name: CD - Staging

permissions:
  contents: read
  packages: read

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

concurrency:
  group: deploy-staging
  cancel-in-progress: true

jobs:
  deploy-staging:
    # Ne déploie que si la CI a réussi sur la branche main
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: self-hosted
    timeout-minutes: 30
    environment:
      name: staging
      url: http://localhost:8081
    env:
      IMAGE_TAG: ${{ github.event.workflow_run.head_sha }}

    steps:
      - name: Checkout repository at triggering commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull & deploy (staging stack)
        shell: bash
        run: |
          set -euo pipefail
          docker compose -p lp-staging --env-file .env.staging pull
          docker compose -p lp-staging --env-file .env.staging up -d --wait --wait-timeout 300
          docker compose -p lp-staging --env-file .env.staging ps

      - name: Quick health probe (host-level)
        shell: bash
        run: |
          if curl -fsS http://localhost:8081/actuator/health; then
            exit 0
          fi
          echo "Backend not healthy (host-level)"
          docker compose -p lp-staging --env-file .env.staging logs backend || true
          exit 1
