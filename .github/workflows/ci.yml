name: CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches: ["main", "develop"]
  pull_request:

env:
  REGISTRY: ghcr.io

concurrency:
  group: learning-platform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Define image names
        shell: bash
        run: |
          OWNER=${{ github.repository_owner }}
          echo "IMAGE_BACKEND=${{ env.REGISTRY }}/${OWNER,,}/learning-platform-backend" >> $GITHUB_ENV
          echo "IMAGE_FRONTEND=${{ env.REGISTRY }}/${OWNER,,}/learning-platform-frontend" >> $GITHUB_ENV
          echo "TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Log in to GHCR (push on main|develop only)
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend image
        run: |
          cd course-service
          chmod +x mvnw || true
          ./mvnw -B -U -DskipTests clean package
          docker build -t $IMAGE_BACKEND:$TAG -t $IMAGE_BACKEND:latest .

      - name: Build frontend image
        run: |
          cd frontend
          docker build -t $IMAGE_FRONTEND:$TAG -t $IMAGE_FRONTEND:latest .

      - name: Push images (main|develop only)
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') }}
        run: |
          # Toujours pousser :$TAG
          docker push $IMAGE_BACKEND:$TAG
          docker push $IMAGE_FRONTEND:$TAG

          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            # latest uniquement sur main
            docker push $IMAGE_BACKEND:latest
            docker push $IMAGE_FRONTEND:latest
          else
            # alias pratique pour la recette
            docker tag $IMAGE_BACKEND:$TAG $IMAGE_BACKEND:staging-latest
            docker tag $IMAGE_FRONTEND:$TAG $IMAGE_FRONTEND:staging-latest
            docker push $IMAGE_BACKEND:staging-latest
            docker push $IMAGE_FRONTEND:staging-latest
          fi