name: CD - Prod (Manual)

permissions:
  contents: read
  packages: read

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Tag/commit SHA à déployer en prod"
        required: true

concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  deploy-prod:
    runs-on: self-hosted
    timeout-minutes: 30
    environment:
      name: production
      url: http://localhost:8080
    env:
      IMAGE_TAG: ${{ inputs.image_tag }}

    steps:
      - name: Checkout repository at requested commit
        uses: actions/checkout@v4
        with:
          ref: ${{ env.IMAGE_TAG }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Preflight (free ports, prune if disk >85%)
        shell: bash
        run: |
          set -euo pipefail
          USED=$(df -P / | awk 'NR==2{print $5}' | tr -d '%')
          if [ "$USED" -ge 85 ]; then docker system prune -af --volumes || true; fi
          docker compose -p lp-staging --env-file .env.staging down --remove-orphans || true
          docker compose -p lp-prod --env-file .env.prod down --remove-orphans || true

      - name: Pull & deploy (prod stack)
        shell: bash
        run: |
          set -euo pipefail
          docker compose -p lp-prod --env-file .env.prod pull
          docker compose -p lp-prod --env-file .env.prod up -d --wait --wait-timeout 300
          docker compose -p lp-prod --env-file .env.prod ps

      - name: Quick health probe (host-level)
        shell: bash
        run: |
          if curl -fsS http://localhost:8080/actuator/health; then exit 0; fi
          echo "Backend not healthy (host-level)"
          docker compose -p lp-prod --env-file .env.prod logs backend || true
          exit 1