name: CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches: ["main"]
    tags: ["v*"]            # <â€” build aussi sur tags Git

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Define image names
        run: |
          OWNER=${{ github.repository_owner }}
          echo "IMAGE_BACKEND=${{ env.REGISTRY }}/${OWNER,,}/learning-platform-backend" >> $GITHUB_ENV
          echo "IMAGE_FRONTEND=${{ env.REGISTRY }}/${OWNER,,}/learning-platform-frontend" >> $GITHUB_ENV
          echo "SHA_TAG=${{ github.sha }}" >> $GITHUB_ENV
          # ref tag lisible (main ou v1.0.7)
          echo "REF_TAG=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend image
        run: |
          cd course-service
          chmod +x mvnw || true
          ./mvnw -B -U -DskipTests clean package
          docker build \
            -t $IMAGE_BACKEND:${SHA_TAG} \
            -t $IMAGE_BACKEND:${REF_TAG} \
            $( [ "${{ github.ref_type }}" = "branch" ] && echo "-t $IMAGE_BACKEND:latest" ) \
            .

      - name: Build frontend image
        run: |
          cd frontend
          docker build \
            -t $IMAGE_FRONTEND:${SHA_TAG} \
            -t $IMAGE_FRONTEND:${REF_TAG} \
            $( [ "${{ github.ref_type }}" = "branch" ] && echo "-t $IMAGE_FRONTEND:latest" ) \
            .

      - name: Push images
        run: |
          for IMG in $IMAGE_BACKEND $IMAGE_FRONTEND; do
            docker push $IMG:${SHA_TAG}
            docker push $IMG:${REF_TAG}
            if [ "${{ github.ref_type }}" = "branch" ] && [ "${{ github.ref_name }}" = "main" ]; then
              docker push $IMG:latest
            fi
          done